#!/bin/bash

: ${1?"Необходимо указать домен в параметр. Пример: `basename $0` ilove.spb.su"}

NSs=( ns0.vcsweb.com ns1.vcsweb.com ns.secondary.net.ua )

#Oooh, shit, I need OOP!
#Global-cashe to do not check sucsesfull updated servers any more.
NSs_sucsessfull=()

function check_axfr_from_NS(){
# $1 - domain
# $2 - NS-server!

	if [ ! '' = "$( dig @$2 $1 axfr | grep 'Transfer failed' )" ]; then
	echo 1	#Failed
	else
	echo 0	#All OK
	fi
}

#function check_axfr_from_vcswebAndSecondary_net_ua(){
function check_axfr_from_NSs(){
# $1 - domain
# $2 - ARRAY-name of NS-servers!

#echo ${1[@]} - ERROR, so, use temporary variables
t="$2[*]"
local NSs=( ${!t} )
#echo "${NSs[@]}"

index=0;
	while [ "${index}" -lt "${#NSs[@]}" ]; do # Проходим все в цикле
#	for ns in "${NSs[@]}" ; do
	res=-1;
		if [ ! 0 = "${NSs_sucsessfull[$index]}" ]; then
		res=$(check_axfr_from_NS $1 ${NSs[$index]});
		echo "NS=${NSs[$index]}; Res=$res"
			if [ $res -eq 0 ]; then #Caching
			NSs_sucsessfull[$index]=0;
			fi
		else
		echo "NS=${NSs[$index]}; Cached Ok;"
		fi

	#echo "NSs_sucsessfull=${NSs_sucsessfull[@]}"
	(( index++ ));
	done

#Return amount of waiting to update!
return $(( ${#NSs[@]} - ${#NSs_sucsessfull[@]} ))
}

check_axfr_from_NSs $1 "NSs"; res=$?

	while [ ! $res -eq 0  ] ; do
	echo $(date)"; wait $res more servers";
	sleep 60;
	check_axfr_from_NSs $1 "NSs"; res=$?
	done;
xmessage "Domain $1 active!"
